---
import type { Section } from "@/types";
import buildToc from "@/lib/utils/buildToc";
import { useTranslations } from "@/lib/utils/languageParser";
import Sidebar from "./widgets/Sidebar.astro";
import ContentList from "./widgets/ContentList.astro";
import SinglePageLayout from "./SinglePageLayout.astro";

type SidebarType = {
  enable: boolean;
  sticky: boolean;
  widgets?: string[];
  position?: "left" | "right";
  props?: any;
};

type ContentType = Section & {
  title?: string;
  slug?: string;
  contentBlocks?: object[];
  publishedAt?: string;
  coverImage?: { url?: string };
  categories?: Array<{ name: string; slug?: string }>;
  author?: { name: string };
};

type Props = {
  pageType?: "single" | "list";
  sidebar?: SidebarType;
  boxShadow?: boolean;
  layout?: "modern" | "minimal";
  content: ContentType;
  contentList?: any;
};

const {
  pageType = "single",
  sidebar,
  boxShadow = true,
  layout = "modern",
  content,
  contentList,
} = Astro.props;

const translations = await useTranslations(Astro.currentLocale as string);
const sidebarEnabled = sidebar?.enable;
---

<section>
  <div class:list={[
    "container",
    sidebarEnabled && "grid grid-cols-1 gap-x-6 gap-y-16 lg:grid-cols-12 lg:items-start"
  ]}>
    {pageType === "list" && (
      <div class:list={[
        boxShadow && "lg:box-shadow-primary",
        sidebarEnabled ? "has-video-modal space-y-10 lg:col-span-8 lg:bg-white lg:p-5" : "grid grid-cols-1 justify-items-center space-y-12",
        sidebarEnabled && sidebar?.position === "right" ? "order-1" : "order-1 lg:order-2",
      ]}>
        <ContentList {...contentList} />
      </div>
    )}

    {sidebarEnabled && (
      <Sidebar sidebar={sidebar} boxShadow={boxShadow} />
    )}

    {pageType === "single" && (
      <SinglePageLayout
        layout={layout}
        translations={translations}
        sidebar={sidebar}
        style={{ boxShadow }}
        content={{
          title: content.title,
          contentBlocks: content.contentBlocks,
          date: content.publishedAt,
          image: content.coverImage?.url ? (import.meta.env.PUBLIC_STRAPI_API_URL || "http://localhost:1337") + content.coverImage.url : '/images/default-blog.jpg',
          categories: content.categories,
          author: content.author,
        }}
      />
    )}
  </div>
</section>
